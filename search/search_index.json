{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome To The Official Exploiters Dream Documentation Here You Will Find All Documentation About EPD What Is EPD ? EPD Stands For Exploiters Dream, And It Is Developed For Penetration Testing On The Roblox Engine(More Known As Roblox) By Allowing Luau Execution On The Client Side. If EPD Is Only For LuaU Why, Is There An API ? The API Is Made So You Can Better Test The Security Of Your Game Is EPD Free? Currently, The Software Is In Development, There Is No Known Release Date Nor Starting Price.","title":"Home"},{"location":"#welcome-to-the-official-exploiters-dream-documentation","text":"","title":"Welcome To The Official Exploiters Dream Documentation"},{"location":"#here-you-will-find-all-documentation-about-epd","text":"","title":"Here You Will Find All Documentation About EPD"},{"location":"#what-is-epd","text":"","title":"What Is EPD?"},{"location":"#epd-stands-for-exploiters-dream-and-it-is-developed-for-penetration-testing-on-the-roblox-enginemore-known-as-roblox-by-allowing-luau-execution-on-the-client-side","text":"","title":"EPD Stands For Exploiters Dream, And It Is Developed For Penetration Testing On The Roblox Engine(More Known As Roblox) By Allowing Luau Execution On The Client Side."},{"location":"#if-epd-is-only-for-luau-why-is-there-an-api","text":"","title":"If EPD Is Only For LuaU Why, Is There An API?"},{"location":"#the-api-is-made-so-you-can-better-test-the-security-of-your-game","text":"","title":"The API Is Made So You Can Better Test The Security Of Your Game"},{"location":"#is-epd-free","text":"","title":"Is EPD Free?"},{"location":"#currently-the-software-is-in-development-there-is-no-known-release-date-nor-starting-price","text":"","title":"Currently, The Software Is In Development, There Is No Known Release Date Nor Starting Price."},{"location":"EPDLicense/","text":"MIT License Copyright (c) 2021 rafa_br34 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"EPDLicense/#mit-license","text":"Copyright (c) 2021 rafa_br34 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"release-notes/","text":"V 0.0.01 Docs Added Documentation Is Now Added Functions Ideas And Templates Added All Functions Templates Are Added","title":"Release Notes"},{"location":"release-notes/#v-0001","text":"","title":"V 0.0.01"},{"location":"release-notes/#docs-added","text":"Documentation Is Now Added","title":"Docs Added"},{"location":"release-notes/#functions-ideas-and-templates-added","text":"All Functions Templates Are Added","title":"Functions Ideas And Templates Added"},{"location":"API/InstancesLibrary/ForceCreateInstance/","text":"Function Call < RobloxInstance > EPD.Instance.ForceCreateInstance( < String > ClassName) Description: Forcefully Creates A Instance That Isn't Creatable Return Value: Returns The Created Instance","title":"ForceCreateInstance()"},{"location":"API/InstancesLibrary/ForceCreateInstance/#function-call","text":"< RobloxInstance > EPD.Instance.ForceCreateInstance( < String > ClassName)","title":"Function Call"},{"location":"API/InstancesLibrary/ForceCreateInstance/#description","text":"Forcefully Creates A Instance That Isn't Creatable","title":"Description:"},{"location":"API/InstancesLibrary/ForceCreateInstance/#return-value","text":"Returns The Created Instance","title":"Return Value:"},{"location":"API/InstancesLibrary/GetProperties/","text":"Function Call < Table > EPD.Instance.GetProperties( < RobloxInstance > Item) < Table > EPD.Instance.GetProperties( < String > ClassName) Description: Gets All Properties Of A Instance/ClassName Return Value: Returns A Table That Contains All The Properties Names, Example: { \"Color\" , \"Size\" , \"Position\" , ... }","title":"GetProperties()"},{"location":"API/InstancesLibrary/GetProperties/#function-call","text":"< Table > EPD.Instance.GetProperties( < RobloxInstance > Item) < Table > EPD.Instance.GetProperties( < String > ClassName)","title":"Function Call"},{"location":"API/InstancesLibrary/GetProperties/#description","text":"Gets All Properties Of A Instance/ClassName","title":"Description:"},{"location":"API/InstancesLibrary/GetProperties/#return-value","text":"Returns A Table That Contains All The Properties Names, Example: { \"Color\" , \"Size\" , \"Position\" , ... }","title":"Return Value:"},{"location":"API/InstancesLibrary/GetScriptRawByteCode/","text":"Function Call < Variant > EPD.Instances.GetScriptRawByteCode( < RobloxInstance > Script) Description: Gets The Raw Bytecode Of A Script. Return Value: String If The Bytecode Was Found nil If The Bytecode Wasn't Found","title":"GetScriptRawByteCode()"},{"location":"API/InstancesLibrary/GetScriptRawByteCode/#function-call","text":"< Variant > EPD.Instances.GetScriptRawByteCode( < RobloxInstance > Script)","title":"Function Call"},{"location":"API/InstancesLibrary/GetScriptRawByteCode/#description","text":"Gets The Raw Bytecode Of A Script.","title":"Description:"},{"location":"API/InstancesLibrary/GetScriptRawByteCode/#return-value","text":"String If The Bytecode Was Found nil If The Bytecode Wasn't Found","title":"Return Value:"},{"location":"API/InstancesLibrary/PseudoRunLocalScript/","text":"Function Call < Void > EPD.Instances.PseudoRunLocalScript( < RobloxInstance > LocalScript) Description: Runs A LocalScript In A Pseudo Roblox Environment, Does Not Yeild","title":"PseudoRunLocalScript()"},{"location":"API/InstancesLibrary/PseudoRunLocalScript/#function-call","text":"< Void > EPD.Instances.PseudoRunLocalScript( < RobloxInstance > LocalScript)","title":"Function Call"},{"location":"API/InstancesLibrary/PseudoRunLocalScript/#description","text":"Runs A LocalScript In A Pseudo Roblox Environment, Does Not Yeild","title":"Description:"},{"location":"API/MiscLibraries/Events/CreateSignal/","text":"Function Call < Script Signal > EPD . Events . CreateSignal () Description: Creates A New ScriptSignal","title":"CreateSignal()"},{"location":"API/MiscLibraries/Events/CreateSignal/#function-call","text":"< Script Signal > EPD . Events . CreateSignal ()","title":"Function Call"},{"location":"API/MiscLibraries/Events/CreateSignal/#description","text":"Creates A New ScriptSignal","title":"Description:"},{"location":"API/MiscLibraries/Events/FireSignal/","text":"Function Call < Variant > EPD.Events.FireSignal( < Script Signal > Event , [...] Args ) < Variant > firesignal( < Script Signal > Event , [...] Args ) // For Back Compatibility Description: Fires The Target Event With Selected Arguments Return Value: Returns The Value That The Event Returned (Most Of The Times Will Be nil )","title":"FireSignal()"},{"location":"API/MiscLibraries/Events/FireSignal/#function-call","text":"< Variant > EPD.Events.FireSignal( < Script Signal > Event , [...] Args ) < Variant > firesignal( < Script Signal > Event , [...] Args ) // For Back Compatibility","title":"Function Call"},{"location":"API/MiscLibraries/Events/FireSignal/#description","text":"Fires The Target Event With Selected Arguments","title":"Description:"},{"location":"API/MiscLibraries/Events/FireSignal/#return-value","text":"Returns The Value That The Event Returned (Most Of The Times Will Be nil )","title":"Return Value:"},{"location":"API/MiscLibraries/Events/SetSignalBehavior/","text":"Function Call < Void > EPD.Events.SetSignalBehavior( < Script Signal > Event , < LuaNumber > Type ) Description: Sets The Event Signal Behavior Value Name Meaning 1 Async Fires Every Connected Handler In A New Thread, Ignores Any Type Of Yeilding 2 Yeild Fires Each Connected Handler In A Chain, Yeilds In Each Connected Function 3 Hybrid Fires Every Connected Handler In A New Thread, And Waits All Threads To Finish Before Returning","title":"SetSignalBehavior()"},{"location":"API/MiscLibraries/Events/SetSignalBehavior/#function-call","text":"< Void > EPD.Events.SetSignalBehavior( < Script Signal > Event , < LuaNumber > Type )","title":"Function Call"},{"location":"API/MiscLibraries/Events/SetSignalBehavior/#description","text":"Sets The Event Signal Behavior Value Name Meaning 1 Async Fires Every Connected Handler In A New Thread, Ignores Any Type Of Yeilding 2 Yeild Fires Each Connected Handler In A Chain, Yeilds In Each Connected Function 3 Hybrid Fires Every Connected Handler In A New Thread, And Waits All Threads To Finish Before Returning","title":"Description:"},{"location":"API/MiscLibraries/Random/TrueRandom/","text":"Function Call < LuaNumber > EPD.Misc.Random.TrueRandom( < LuaNumber > Min, < LuaNumber > Max) < Float > EPD.Misc.Random.TrueRandom() Description: Uses Hardware Info For Random Number Generation Return Value: Returns A LuaNumber Between 'Min' And 'Max' Returns A Float Between 0 And 1","title":"TrueRandom()"},{"location":"API/MiscLibraries/Random/TrueRandom/#function-call","text":"< LuaNumber > EPD.Misc.Random.TrueRandom( < LuaNumber > Min, < LuaNumber > Max) < Float > EPD.Misc.Random.TrueRandom()","title":"Function Call"},{"location":"API/MiscLibraries/Random/TrueRandom/#description","text":"Uses Hardware Info For Random Number Generation","title":"Description:"},{"location":"API/MiscLibraries/Random/TrueRandom/#return-value","text":"Returns A LuaNumber Between 'Min' And 'Max' Returns A Float Between 0 And 1","title":"Return Value:"},{"location":"API/UserLibrary/SendEPDPrompt/","text":"","title":"SendEPDPrompt()"},{"location":"API/UserLibrary/SendMessageBox/","text":"Function Call < Integer > EPD.User.SendMessageBox( < String > Message, < String > Title, < Integer > Type) Description: MessageBoxA Function API, See MessageBoxA Documentation For The Arguments And Return Value. Message = lpText Title = lpCaption Type = uType","title":"SendMessageBox()"},{"location":"API/UserLibrary/SendMessageBox/#function-call","text":"< Integer > EPD.User.SendMessageBox( < String > Message, < String > Title, < Integer > Type)","title":"Function Call"},{"location":"API/UserLibrary/SendMessageBox/#description","text":"MessageBoxA Function API, See MessageBoxA Documentation For The Arguments And Return Value. Message = lpText Title = lpCaption Type = uType","title":"Description:"},{"location":"API/UserLibrary/SetFPSLimit/","text":"Function Call < Void > EPD.User.SetFPSLimit( < LuaNumber > Limit) < Void > setfpscap( < LuaNumber > Limit) // For Back Compability Description: Uses Hardware Info For Random Number Generation Return Value: Returns A LuaNumber Between 'Min' And 'Max' Returns A Float Between 0 And 1","title":"SetFPSLimit()"},{"location":"API/UserLibrary/SetFPSLimit/#function-call","text":"< Void > EPD.User.SetFPSLimit( < LuaNumber > Limit) < Void > setfpscap( < LuaNumber > Limit) // For Back Compability","title":"Function Call"},{"location":"API/UserLibrary/SetFPSLimit/#description","text":"Uses Hardware Info For Random Number Generation","title":"Description:"},{"location":"API/UserLibrary/SetFPSLimit/#return-value","text":"Returns A LuaNumber Between 'Min' And 'Max' Returns A Float Between 0 And 1","title":"Return Value:"}]}